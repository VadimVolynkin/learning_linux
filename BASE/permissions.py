# ===================================================================================================================================
# CHANGE OWNER and GROUP for paths and files
# ===================================================================================================================================

sudo chown petya file1.txt                              # меняет владельца файла/папки
sudo chgrp Programmers file1.txt                        # меняет группу файла/папки

chown mario ./dir1                                      # поменять владельца папки
chown mario:mario ./dir2                                # установить юзер:группу для папки
chown -R mario:mario ./dir3                             # рекурсивно поменять права внтури папки
chown --from=mario:mario www-data:www-data -cR ./dir3   # рекурсивно помнять файлы с юзер:группой на другие права

# ТИПЫ ПОЛЬЗОВАТЕЛЕЙ LINUX
sudo(root) имеет любые привилегии
u - владелец
g - группа
o - остальные

# ===================================================================================================================================
# ЧИСЛОВОЙ ФОРМАТ
# ===================================================================================================================================

chmod -R 777 pathname            команда дает все права всем внутри папки рекурсивно
для файлов по умолчанию:         644 (-rw-r--r--) владельцу - читать и писать, остальным - читать
для каталогов по умолчанию:      755 (drwxr-xr-x) владельцу все, группе и остальным - читать имена файлов
для файлов обычно используется:  0, 5, 6, 7
для папок обычно используется:   0, 5 и 7

#                  ФАЙЛ                        ПАПКА
(4 + 2 + 1) 7 rwx  все права 	                 все права 
(4 + 2 + 0) 6 rw-  чтение и запись 	           чтение имён файлов 
(4 + 0 + 1) 5 r-x  чтение и выполнение 	       доступ на чтение 
(4 + 0 + 0) 4 r--  чтение                      чтение имён файлов 
(0 + 2 + 1) 3 -wx  запись и выполнение 	       всё, кроме чтения списка файлов
(0 + 2 + 0) 2 -w-  запись 	                   нет 
(0 + 0 + 1) 1 --x  выполнение 	               чтение файлов и их свойств 
(0 + 0 + 0) 0 ---  нет 	                       нет 
4777 rwsrwxrwx     SUID запуск от суперюзера   не имеет смысла
2777 rwxrwsrwx     SGID запуск от группы       каждый новый файл будет принадлежать к группе папки, а не основной группе владельца



# ПОПУЛЯРНЫЕ ВАРИАНТЫ
400 (-r--------)  Владелец имеет право чтения; никто другой не имеет права выполнять никакие действия
700 (-rwx------)  Владелец может читать, записывать и запускать на выполнение; никто другой не имеет права выполнять никакие действия
644 (-rw-r--r--)  Все пользователи имеют право чтения; владелец может редактировать
660 (-rw-rw----)  Владелец и группа могут читать и редактировать; остальные не имеют права выполнять никаких действий
664 (-rw-rw-r--)  Все пользователи имеют право чтения; владелец и группа могут редактировать
666 (-rw-rw-rw-)  Все пользователи могут читать и редактировать
744 (-rwxr--r--)  Каждый пользователь может читать, владелец имеет право редактировать и запускать на выполнение
755 (-rwxr-xr-x)  Каждый пользователь имеет право читать и запускать на выполнение; владелец может редактировать
777 (-rwxrwxrwx)  Каждый пользователь может читать, редактировать и запускать на выполнение
440 (-r--r-----)  Владелец и группа имеет право чтения никто другой не имеет права выполнять никакие действия

4555 (-r-sr-xr-x) Каждый пользователь имеет право читать и запускать на выполнение с правами владельца файла
2555 (-r-xr-sr-x) Каждый пользователь имеет право читать и запускать на выполнение с правами группы (user group) владельца файла
1555 (-r-xr-xr-t) Каждый пользователь имеет право читать и запускать на выполнение; удалить файл может только владелец этого файла


# ФЛАГИ CHMOD 
-R рекурсивное изменение прав доступа для каталогов и их содержимого. 
Никогда не изменяет права на символьные ссылки; однако для каждой символьной ссылки, заданной в командной строке, изменяет права доступа связанного с ней файла. 
Команда игнорирует символьные ссылки, встречающиеся во время рекурсивной обработки каталогов. 

-f не выводить сообщения об ошибке для файлов, чьи права не могут быть изменены
-v выводить максимум информации для каждого файла
-c выводить информацию обо всех изменениях
--preserve-root - не выполнять рекурсивные операции для корня "/"
--reference - взять маску прав из указанного файла


# ===================================================================================================================================
# СИМВОЛЬНЫЙ ФОРМАТ
# ===================================================================================================================================
chmod u=rwx,g=rx,o=rx filename
chmod +x script.sh

# КОМУ ПОМЕНЯТЬ ПРАВА
u - владелец
g - группа
o - остальные
a - все пользователи (ugo)


# ОПЕРАТОРЫ
+ добавить права
- забрать права
= установить права


# КАКИЕ ПРАВА БУДУТ УСТАНОВЛЕНЫ ИЛИ УДАЛЕНЫ

r read
# чтение файла или содержимого каталога

w write
# запись в файл или в каталог

x execute
# выполнение файла или чтение содержимого каталога 

X special execute
# выполнение, если файл является каталогом или уже имеет право на выполнение для какого-нибудь пользователя

s setuid/gid
# установленные атрибуты SUID или SGID позволяют запускать файл на выполнение с правами владельца файла или группы соответственно

t sticky(на месте x)
# устанавливая t-бит на каталог, мы меняем это правило таким образом, что удалить файл может только владелец этого файла


# ===== ВИДЫ ПРАВ =========================================================================================================

4 r - чтение
# для файла
# для папки

2 w - запись
# для файла - возможность записывать, изменять и удалять файл
# для папки - возможность создавать файлы и удалять файлы, даже если право на запись для них не установлено. 

1 x - выполнение
# для обычного файла - открытие, для исполняемого — запуск, зайти нельзя
# для папок - просмотр содержимого(можно зайти в папку через cd). Если только r - можно только просмотреть содержимое.

1000 sticky bit или restricted deletion flag (t-бит)
# используется только с каталогами
# удалить (переименовать) файл может только владелец этого файла
# если не установлен, файл в данном каталоге может удалить (переименовать) любой пользователь, имеющий доступ на запись 

s
4000(rwsrwxrwx) SUID выполнение от имени суперпользователя
# для папки - не имеет смысла

2000(rwxrwsrwx) SGID выполнение от имени группы 
# для папки - каждый новый файл будет принадлежать к группе папки, а не основной группе владельца






