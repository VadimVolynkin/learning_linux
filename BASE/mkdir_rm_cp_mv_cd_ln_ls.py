

ls - список файлов в директории;

cd - переход между директориями;

mkdir - создать папку
rmdir - удалить папку

ln - создать ссылку;
chmod - изменить права файла

touch - создать пустой файл
rm - удалить файл
cp - скопировать файл
mv - переместить файл

# ===================================================================================================================================
# mkdir, rm -r и rmdir - удаление файлов и папок
# ===================================================================================================================================

# ===== mkdir
mkdir new_dir                                      # создать папку
mkdir /home/mario/new_dir                          # создать папку в другой папке
mkdir -m 777 new_dir                               # создать папку с правами
mkdir -p /home/mario/папка/папка/папка             # создать много вложенных папок
mkdir -p /home/mario/{папка1,папка2,папка3}        # создать много папок  
mkdir -p test/dir--{000..100}
touch test/dir--{000..100}/file-{A..Z}

-m, --mode=режим                                   # установить код доступа (как в chmod)
-p, --parents                                      # не выдавать ошибок если существует, создавать родительские каталоги, если необходимо
-v, --verbose                                      # печатать сообщение о каждом созданном каталоге
-Z, --context=CTX                                  # установить контекст безопасности SELinux для каждого создаваемого каталога равным CTX


# ===== rm
rm -r                                              # удалит папку с содержимым рекурсивно
rm -f                                              # удалит папку, не выдаст ошибку если папки нет, удалит даже защищенные файлы
rm -d                                              # удалит только пустую папку
rm -v                                              # подробная информация о каждом удалении
rm -i                                              # требует подтверждения при каждом удалении
rm -I                                              # требует 1 подтверждение для удаления всех файлов, если их больше 3
rm *                                               # удалит все файлы в текущей директории


# ===== rmdir для удаления пустых каталогов
rmdir directory                                    # удаляет пустую директорию
rmdir --ignore-fail-on-non-empty directory         # удаляет директорию с содержимым
rmdir -p test/test-dir/                            # удаляет директорию и весь путь до нее. Родительские каталоги должны быть пустыми.


# ===================================================================================================================================
# cp - копирование
# ===================================================================================================================================
cp -a /source/. /target                                         # копировать все из папки в папку с атрибутаи, правами и рекурсией
cp -aT /source /target                                          # копировать все из папки в папку с атрибутаи, правами и рекурсией
cp -r /etc /etc_back                                            # папку с содержимым без точного воспроизведения прав

cp file newfile                                                 # сделать дубликат файла
cp /etc/myfile1.txt /123/myfile1.txt /some/myfile3.txt mydir    # скопировать несколько файлов в папку

cp -u myfile*.txt mydir                                         # скопировать если файлы новее
cp -n /home/pupkin/mydir /mnt/usbflash                          # НЕ перезаписать существующие файлы 
cp -f myfile1.txt myfile2.txt                                   # перезаписать существующий файл без подтверждения
cp -i myfile1.txt myfile2.txt                                   # требует подтверждения чтобы перезаписать существующий файл 


# ===================================================================================================================================
# mv - перемещение
# ===================================================================================================================================
mv file newfile                                                 # переименование файла или директории
mv file /home/user/tmp/                                         # перемещение файла в текущей директории
mv * mydir/                                                     # переместить все файлы из текущей директории
mv *.jpg mydir                                                  # переместить все файлы .jpg из текущей директории

mv -f                                                           # при перезаписи существующих файлов не спрашивать разрешения
mv -i                                                           # при перезаписи существующих файлов спрашивать разрешения
mv -n mydir1/* mydir2/                                          # не перезаписывать
mv --strip-trailing-slashes                                     # далить завершающий слеш из источника, если есть
mv -b -S ".bak" myfile1.txt myfile2.txt                         # создать резервную копию
mv -S                                                           # изменить суффикс при создании резервных копий
mv -t                                                           # переместить исходные файлы в директорию
mv -u mydir1/* mydir2/                                          # переместить все файлы, если они новее
mv -v                                                           # выводить информацию


# ===================================================================================================================================
# cd - переход
# ===================================================================================================================================
cd mydir
cd ./mydir

cd /usr/share/
cd ../somedir
cd ../../somedir

cd Desktop

cd ..
cd -


# ===================================================================================================================================
# ls
# ===================================================================================================================================
ls
ls -I                                            # вывод подробной информации о файлах
ls -L                                            # выводить у символических ссылок информацию о файле, а не ссылке
ls -R /home                                      # вывод содержимого рекурсивно
ls *.txt                                         # вывод файлов с .txt
ls *.{html,php,txt}                              # вывод файлов с расширением
ls [ad]*                                         # вывод файлов только на буквы a, d

ls /home                                         # покажет все кроме скрытых в строку
ls -l /home/                                     # покажет все кроме скрытых
ls -la                                           # покажет все включая скрытые
ls --block-size=M /home/                         # показать с размером в мегабайтах

ls -c                                            # сортировать по времени изменения
ls -clt                                          # сортировать и показывать со временем изменения
ls -r                                            # сортировать список в обратном порядке
ls -X                                            # сортировать по расширению



# ===================================================================================================================================
# ln
# ===================================================================================================================================
Символическая ссылка(soft links или sym-link) - файл-линк на другой файл или папку, по сути это ярлык в винде.
Жесткая ссылка - еще 1 новый указатель на данные.

# Мягкая связь(указатель на файл) 
При удалении мягкой ссылки целевой файл не страдает. 
При удалении целевого файла мягкая ссылка становится нерабочей. 
Мягкую ссылку можно перемещать - она сохраняет работоспособность, т к содержит абсолютный путь к целевому файлу.
Права и идентификаторы у целевого файла и мягкой ссылки разные.

ln -s file slink
# file — имя или полный путь к файлу или директории
# slink — название ссылки. Она будет помещена в тот же каталог, где и находится целевой объект.


# Жесткая связь(еще 1 указатель на данные. Права, владелец и даты изменений сохраняются)
При удалении жесткой ссылки данные доступны через целевой файл. 
При удалении целевого файла данные остаются доступны через жесткую ссылку.
Жесткие ссылки должны находиться в 1 ФС. 

ln file hlink
































