# ===============================================================================================
# AUTH 2.0 АУТЕНТИФИКАЦИЯ
# ===============================================================================================

Протокол авторизации, при которомаутентификацией на целевом сайте управляет доверенный сайт(например гугл или фб).
Протокол избавляет от необходимости доверять целевому сайту свой логин и пароль, а также позволяет выдавать ограниченный набор прав, а не все сразу.
Refresh-токен позволяет получить новый короткоживущий токен без ввода логина и пароля.
Безопасность OAuth 2.0 во многом основана на SSL.
Identity Token — подтверждение аутентификации. Этот токен содержит минимальный набор информации о пользователе.

# ===== Авторизация для приложений, имеющих серверную часть (чаще всего, это сайты и веб-приложения)
Только этот вариант позволяет сервису однозначно установить приложение, обращающееся за авторизацией. Остальные варианты авторизации происходят на клиенте и могут быть подделаны(подмена приложения). 
Запросы надо делать по HTTPS.

# как работает
1. Редирект на страницу авторизации
client_id и client_secret - значения, полученные при регистрации приложения на платформе.
2. На странице авторизации у пользователя запрашивается подтверждение выдачи прав.
3. В случае согласия пользователя, браузер редиректится на URL, указанный при открытии страницы авторизации, с добавлением в GET-параметры authorization code.
4. Сервер приложения выполняет POST-запрос с полученным authorization code в качестве параметра. В результате этого запроса возвращается access token.
client_secret хранится на сервере приложения и подтверждает, что запрос не подделан.

# ===== Авторизация для полностью клиентских приложений (мобильные и desktop-приложения)
Этот вариант требует поднятия в приложении окна браузера, но не требует серверной части и дополнительного вызова сервер-сервер для обмена authorization code на access token.

# как работает 
1. Открытие встроенного браузера со страницей авторизации.
2. У пользователя запрашивается подтверждение выдачи прав.
3. В случае согласия пользователя, браузер редиректится на страницу-заглушку во фрагменте (после #) URL которой добавляется access token.
4. Приложение перехватывает редирект и получает access token из адреса страницы.